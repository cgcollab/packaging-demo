#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
#@ load("@ytt:struct", "struct")

#@ if data.values.profile == "full":

#@ def collect_values(data_values):
#@  values = {
#@    "giantApp": {
#@      "name": data.values.giantApp.name,
#@      "message": data.values.giantApp.message
#@    },
#@    "namespace": {
#@      "name": data.values.namespace.name
#@    }
#@  }
#@  return struct.encode(values)
#@ end
---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  name: giant-app
  namespace: metapackage-install
  annotations:
    kapp.k14s.io/change-rule: "upsert after upserting rbac"
spec:
  serviceAccountName: #@ data.values.installConfig.serviceAccount
  packageRef:
    refName: giant-app.corp.com
    versionSelection:
      constraints: 3.5.1
  values:
    - secretRef:
        name: giant-app-values
---
apiVersion: v1
kind: Secret
metadata:
  name: giant-app-values
  namespace: metapackage-install
stringData:
  values.yml: #@ yaml.encode(collect_values(data.values))

#@ end