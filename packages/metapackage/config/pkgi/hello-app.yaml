#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
#@ load("@ytt:struct", "struct")

#@ def collect_values(data_values):
#@  message = "big world"
#@  if data.values.profile != "full":
#@    message = "small world"
#@  end
#@  if hasattr(data.values, "helloApp") and hasattr(data.values.helloApp, "message") and data.values.helloApp.message != "":
#@    message = data.values.helloApp.message
#@  end
#@  values = {
#@    "helloApp": {
#@      "name": data.values.helloApp.name,
#@      "message": message
#@    },
#@    "namespace": {
#@      "name": data.values.namespace.name
#@    }
#@  }

#@  return struct.encode(values)
#@ end
---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  name: hello-app
  namespace: metapackage-install
  annotations:
    kapp.k14s.io/change-rule: "upsert after upserting rbac"
spec:
  serviceAccountName: #@ data.values.installConfig.serviceAccount
  packageRef:
    refName: hello-app.corp.com
    versionSelection:
      constraints: 1.2.3
  values:
    - secretRef:
        name: hello-app-values
---
apiVersion: v1
kind: Secret
metadata:
  name: hello-app-values
  namespace: metapackage-install
stringData:
  values.yml: #@ yaml.encode(collect_values(data.values))